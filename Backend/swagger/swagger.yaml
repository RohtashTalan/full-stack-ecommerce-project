openapi: 3.0.0
info:
  title: Ecommerce Api
  description: Api to personal ecommerce app.
  version: 1.0.0
  contact:
    name: API Support - Rohtash Talan
    email: rohtashtalancompany@gmail.com
    url: https://rohtashtalan.com


servers:
  - url: http://localhost:4000/api/v1
    description: Api server for localhost ecommerce app

tags:
  - name: Auth
    description: Everything about User
    externalDocs:
      url: http://localhost:4000/api/v1/auth
  - name: Collection
    description: Everything about Collection
    externalDocs:
      url: http://localhost:4000/api/v1/collection
  - name: Product
    description: Everything about Products
    externalDocs:
      url: http://localhost:4000/api/v1/product
  - name: Order
    description: Everything about Order
    externalDocs:
      url: http://localhost:4000/api/v1/order
  - name: Coupon
    description: Everything about Coupon
    externalDocs:
      url: http://localhost:4000/api/v1/coupon


components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth: 
      type: http
      scheme: bearer


paths:
  /auth/signup:
    post:
      tags:
        - Auth
      summary: Register user on the server
      requestBody:
        description: name, email, password required to register
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                  name:
                    type: string
                  email: 
                    type: string
                  password:
                    type: string
      responses: 
        '200':
          description: Success - return object
          content:
            application/json: 
              schema:
                type: object
                properties:
                  success:
                    type: string
                  token: 
                    type: string
                  user:
                    type: object
        '400':
          description: Failure - return object
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login user on the server
      requestBody:
        description: email, password required to login
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                  email: 
                    type: string
                  password:
                    type: string
      responses: 
        '200':
          description: Success - return object
          content:
            application/json: 
              schema:
                type: object
                properties:
                  success:
                    type: string
                  token: 
                    type: string
                  user:
                    type: object
        '400':
          description: Failure - return object