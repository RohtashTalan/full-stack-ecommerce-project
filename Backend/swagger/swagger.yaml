openapi: 3.0.0
info:
  title: Ecommerce Api
  description: Api to personal ecommerce app.
  version: 1.0.0
  contact:
    name: API Support - Rohtash Talan
    email: rohtashtalancompany@gmail.com
    url: https://rohtashtalan.com


servers:
  - url: http://localhost:4000/api/v1
    description: Api server for localhost ecommerce app

tags:
  - name: Auth
    description: Everything about User
    externalDocs:
      url: http://localhost:4000/api/v1/auth
  - name: Collection
    description: Everything about Collection
    externalDocs:
      url: http://localhost:4000/api/v1/collection
  - name: Product
    description: Everything about Products
    externalDocs:
      url: http://localhost:4000/api/v1/product
  - name: Order
    description: Everything about Order
    externalDocs:
      url: http://localhost:4000/api/v1/order
  - name: Coupon
    description: Everything about Coupon
    externalDocs:
      url: http://localhost:4000/api/v1/coupon


components:
  securitySchemes:
    cookieAuth: 
        type: apiKey
        in: cookie
        token: token  # cookie name
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth: 
      type: http
      scheme: bearer


paths:

# User and Auth related APIs
  /auth/signup:
    post:
      tags:
        - Auth
      summary: Register user on the server
      requestBody:
        description: name, email, password required to register
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                  name:
                    type: string
                  email: 
                    type: string
                  password:
                    type: string
      responses: 
        '200':
          description: Success - return object
          content:
            application/json: 
              schema:
                type: object
                properties:
                  success:
                    type: string
                  token: 
                    type: string
                  user:
                    type: object
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login user on the server
      requestBody:
        description: email, password required to login
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                  email: 
                    type: string
                    default: working@vijkom.com
                  password:
                    type: string
                    default: working321
      responses: 
        '200':
          description: Success - return object
          content:
            application/json: 
              schema:
                type: object
                properties:
                  success:
                    type: string
                  token: 
                    type: string
                  user:
                    type: object
  /auth/logout:
    get:
      tags:
        - Auth
      summary: Logout user on the server
      responses: 
        '200':
          description: Success - return object
          content:
            application/json: 
              schema:
                type: object
                properties:
                  success:
                    type: string
                  message: 
                    type: string
  /auth/profile:
    get:
      tags:
        - Auth
      summary: return Profile of user from the server
      responses: 
        '200':
          description: Success - return object
          content:
            application/json: 
              schema:
                type: object
                properties:
                  success:
                    type: string
                  user: 
                    type: object
  /auth/password/forgot:
    post:
      tags:
        - Auth
      summary: send email to rest password on the server
      requestBody:
        description: email required to request forgot password
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                  email: 
                    type: string
      responses: 
        '200':
          description: Success - return object
          content:
            application/json: 
              schema:
                type: object
                properties:
                  success:
                    type: string
                  message: 
                    type: string     
  /auth/password/reset/{token}:
    post:
      tags:
        - Auth
      summary: reset password with reset token password on the server
      parameters:
        - name: token
          in: path
          description: reset token
          required: true
          schema:
            type: string
      requestBody:
        description: password, confirm password required to reset password
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                  password: 
                    type: string
                  confirmPassword: 
                    type: string
      responses: 
        '200':
          description: Success - return object
          content:
            application/json: 
              schema:
                type: object
                properties:
                  success:
                    type: string
                  message: 
                    type: string
  /auth/password/update:
    post:
      tags:
        - Auth
      summary: update password on the server
      requestBody:
        description: user should be logined and then oldPassword, newPassword required to update password
        required: true
        content:
          application/json:
            schema: 
              type: object
              properties:
                  oldPassword: 
                    type: string
                  newPassword: 
                    type: string
      responses: 
        '200':
          description: Success - return object
          content:
            application/json: 
              schema:
                type: object
                properties:
                  success:
                    type: string
                  message: 
                    type: string




